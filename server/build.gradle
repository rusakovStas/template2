plugins {
	id 'org.springframework.boot' version '2.2.0.M3'
	id 'java'
	id 'idea'
	id "de.solugo.gradle.nodejs" version "0.6.0"
	id 'io.qameta.allure' version '2.5'
}

apply plugin: 'io.spring.dependency-management'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

group = 'com.stasdev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile('org.postgresql:postgresql')
	compile("com.h2database:h2")

	compile group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.10.6'
	runtime group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.10.6'
	runtime group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.10.6'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.0')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.0')
	testImplementation('com.codeborne:selenide:5.2.3')
	testImplementation('io.qameta.allure:allure-junit5:2.8.1')
}

nodejs {
	version = '10.8.0'
	rootPath = "${project.projectDir}/../client"
}

allure {
	autoconfigure = false
	version = '2.7.0'
}

task copyFrontBuildToPublic(type: Copy) {
	from "${project.projectDir}/../client/build"
	into "${project.projectDir}/src/main/resources/public"
}

task clearPublic(type: Delete){
	project.delete(files("${project.projectDir}/src/main/resources/public/"))
}

apply from: rootProject.file('gradle/tests.gradle')